% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/key-helpers.R
\name{check_set_equality}
\alias{check_set_equality}
\title{Test if the value sets of two different columns in two different tables are the same}
\usage{
check_set_equality(t1, c1, t2, c2, verbose = TRUE)
}
\arguments{
\item{t1}{Data frame containing the column \code{c1}.}

\item{c1}{Column of \code{t1} that should only contain values that are also in \code{c2} of data frame \code{t2}.}

\item{t2}{Data frame containing the column \code{c2}.}

\item{c2}{Column of \code{t2} that should only contain values that are also in \code{c1} of data frame \code{t1}.}

\item{verbose}{Boolean, if \code{TRUE} (default), the lines with missing column entries will be printed before an error is thrown.}
}
\description{
\code{check_set_equality()} is a wrapper of \code{check_if_subset()}. It tests if
one value set is a subset of another and vice versa, i.e., if both sets are the same.
If not, it throws an error.
}
\examples{
data_1 <- tibble::tibble(a = c(1, 2, 1), b = c(1, 4, 1), c = c(5, 6, 7))
data_2 <- tibble::tibble(a = c(1, 2, 3), b = c(4, 5, 6), c = c(7, 8, 9))
# this is failing:
try(check_set_equality(data_1, a, data_2, a))

data_3 <- tibble::tibble(a = c(2, 1, 2), b = c(4, 5, 6), c = c(7, 8, 9))
# this is passing:
check_set_equality(data_1, a, data_3, a)
}
